# This is a basic workflow to help you get started with Actions

name: Deploy-live

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - main
      - beta

jobs: # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  build: # This workflow contains a single job called "build"
    runs-on: ubuntu-latest # The type of runner that the job will run on
    env:
      BUNDLE_WITH: test jekyll_plugins
      SITE_ID:  'api' # which iiif site this is
      LIVE_PATH: '/api'
      JEKYLL_ENV: 'production'
    steps: # Steps represent a sequence of tasks that will be executed as part of the job
    - name: Checkout # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v2
    - name: Setup ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - name: Install
      run: gem install bundler && bundle
    - name: Build live site
      run: bundle exec rake build:live
    - name: Test html
      run: bundle exec rake test:html
    - name: Test internal links
      run: bundle exec rake test:links:internal
    - name: Test *iiif.io* links
      run: bundle exec rake test:links:iiif
    - name: Spec tests
      run: bundle exec rake api:spec
    - name: Create GitHub deployment # Deploy to live site
      uses: glenrobson/deployments@v0.4.2
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        auto_inactive: 'false'
        env: staging
    - name: Deploy to S3
      uses: glenrobson/s3-sync-action@v0.5.1
      with:
        args: --acl public-read
      env:
        AWS_S3_BUCKET: "iiif-website"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "_site"
    - name: Update deployment status
      uses: glenrobson/deployments@v0.4.2
      if: always()
      with:
        step: finish
        auto_inactive: 'false'
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: "https://iiif.io/api/index.html"
